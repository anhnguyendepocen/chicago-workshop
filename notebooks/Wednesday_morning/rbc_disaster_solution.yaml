name: RBC

model_type: dtmscc

symbols:
   markov_states: [x, y, z]
   states:  [k]
   controls: [i, n]
   parameters: [beta, sigma, eta, chi, delta, alpha, rho, zbar, sig_z, kmax, c_z, c_k, u, p]

definitions:
    c: exp(z)*(1-c_z*y)*k^alpha*n^(1-alpha) - i
    rk: alpha*exp(z)*(1-c_z*y)*(n/k)^(1-alpha)
    w: (1-alpha)*exp(z)*(1-c_z*y)*(k/n)^(alpha)

equations:

   transition:
      - k = (1-delta)*k(-1)*(1-c_k*x) + i(-1)

   arbitrage:
      - 1 - beta*(c/c(1))^(sigma)*(1-delta+rk(1))     | 0.0 <= i <= inf
      - chi*n^eta*c^sigma - w                         | 0.0 <= n <= inf

calibration:

    #parameters:

    beta : 0.99
    phi: 1
    chi : w/c^sigma/n^eta
    delta : 0.025
    alpha : 0.33
    rho : 0.8
    sigma: 1.0
    eta: 1.0
    zbar: 1.0
    rho_z: 0.8
    sig_z: 0.016**2
    kmax: 2.0
    c_k: 0.3
    c_z: 1-(1-c_k)^(1-alpha)

    u: 0.03
    p: 0.8

    # constant initial values:
    z: zbar
    rk: 1/beta-1+delta
    w: (1-alpha)*z*(k/n)^(alpha)
    n: 0.33
    k: n/(rk/alpha)^(1/(1-alpha))
    i: delta*k
    c: z*k^alpha*n^(1-alpha) - i

    x: 0
    y: 0

options:

    discrete_transition: !MarkovProduct

          M1: !MarkovChain   # catastrophe
              P: [[1, 1],
                  [0, 1],
                  [0, 0]]
              Q: [ [0, 1,  0    ],
                   [0, p, (1-p) ],
                   [u, 0, (1-u) ] ]

          M2: !AR1
              rho: rho_z
              sigma: sigma_z
              N: 3

    grid: !Cartesian

        a: [k*0.5]
        b: [k*2]
        orders: [20]
